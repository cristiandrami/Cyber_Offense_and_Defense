here we noticed that in the response to the login post we have Set-Cookie: session=OAt3uIY9m6x1vUuX1w6KUdI1J2vWpPJx; Secure; HttpOnly; SameSite=Strict
so we can do requests only exclusively from the same site


in addition we have noticed that in the blog-post comment functionality when we write a comment then the website uses the paramtere postId to redirect to the commented post
Now here we have a vulnerability because if we put /post/comment/confirmation?postId=../../my-account we are able to return to the account page.

In addition the endpoint allows to change the email using the GET verbe, so bingo
so this means that if we construct a script in this way:

<script>
    document.location = "https://YOUR-LAB-ID.web-security-academy.net/post/comment/confirmation?postId=1/../../my-account/change-email?email=pwned%40web-security-academy.net%26submit=1";
</script>

we are able to force the email changing, because the request will start from the site itself to perform the redirect

we need submit (boh) because if we don't put it the server will respond missing parameter submit, we also need to encode & in %26
