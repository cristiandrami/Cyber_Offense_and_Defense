1) if we try to visit GET domain/evil we can see that the server replies whit a response in which is reflected the request we have done
2) so we can try to inject a script

3) in this case we can see that when we perform a request from the browser the request is URL encoded so if we try to inject something it is reflected in URL encoding and not triggered

4) if we do it via ZAP then the request is not URL encoded, so if we send /evil</p><script>alert(1)</script><p>hello then the cache stores it

5) also when is encoded the endoced request refeer also to the decoded one so if we send the link after the caching then we can make the victim trigger the alert

6) game is done
