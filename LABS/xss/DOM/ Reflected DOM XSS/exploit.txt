
https://portswigger.net/web-security/cross-site-scripting/dom-based/lab-dom-xss-reflected
This lab demonstrates a reflected DOM vulnerability. Reflected DOM vulnerabilities occur when the server-side application processes data from a request and echoes the data in the response. A script on the page then processes the reflected data in an unsafe way, ultimately writing it to a dangerous sink.

To solve this lab, create an injection that calls the alert() function.






1) use the search bar to search for a random string, such as "hello".
2) in ZAP you can see that the string is reflected into a JSON response called search-results
3) if we follow the redirection we can see that this JSON is passed to the file searchResults.js
4) open the searchResults.js file and notice that the JSON response is used with an eval() function call.
5) the JSON escapes quotation marks but not the \ so we can craft:
    \"-alert(1)}//


This works because allows us to break the json and interpreter alert() not as string:
    {"searchTerm":"\\"-alert(1)}//", "results":[]}
    
    }// is used to close the JSON and remove the following part
