1) we know that Origin header is used as key for caching so we can use it to perfrom our test
2) in the requests done when we perform GET domain we can see that there is one:
    GET domain/js/geolocate.js?callback=setCountryCookie
    
    so it seems that we are saying that the callback we want to call is the function setCountryCookie
    in fact in the response we obtain setCountryCookie({"country":"United Kingdom"});

3) now we can try to use Origin: test to understand the cache behavior
   we notice that if we put GET domain/js/geolocate.js?callback=setCountryCookie&utm_content=aaa
   utm_content=aaa is not used as key but is reflected in the response as set-cookie
   
4) now we can try to inject javascript using ?callback=setCountryCookie&utm_content=aaa;callback=alert(1)//

5) we can notice that the cache saves callback=setCountryCookie but the back-end responses with alert(1) so we can put our malicious payload in cache

6) if we request GET domain/js/geolocate.js?callback=setCountryCookie then we will obtain the response with the malicious alert(1)
