1) we know that Origin header is used as key for caching so we can use it to perfrom our test
2) we can see that when we perform a request with a query string: 
    GET domain/?test=1

    if we send 2 times the request the server will store the response in cache but we can also see that ?test=1 is used in the cache key

3) so what we can do is to try as query parameter utm_content
    so what we do is a request of the kind GET domain/?test=1&utm_content=something

    to perform the test we need to set Origin: some_origin_test in order to understand how the cache works (otherwise we have to wait 40 sec each test)

4) we can see now that if we remove utm_content from the request ad we perform now GET domain/?test=1 we will obtain the cached response of GET domain/?test=1&utm_content=something

5) we can see that when the response to GET domain/?test=1&utm_content=something is stored in cache, in the response ?test=1&utm_content=something is reflected into a tag <link rel="canonical" href="domain/?test=1&utm_content=something">

6) we can try to use as parameter ?utm_content='><script>alert(1)</script>   (url encoded) on the original request, without Origin header

7) the game is done
