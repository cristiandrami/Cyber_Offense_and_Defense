https://portswigger.net/web-security/csrf/bypassing-samesite-restrictions/lab-samesite-lax-bypass-via-method-override

This lab's change email function is vulnerable to CSRF. To solve the lab, perform a CSRF attack that changes the victim's email address. You should use the provided exploit server to host your attack.

You can log in to your own account using the following credentials: wiener:peter



1) login as wiener:peter and try to change the email
2) we know that the policy is the LAX that allows to send cookies in cross site requests only if the method is GET and the request is a top level request (example click on a link)

3) try to understand if we can ouse GET method and then override it with the POST method
    it works  with GET /my-account/change-email?email=wiener443%40normal-user.net&_method=POST

    in fact if we don't put _method=POST then the server replies with "Method not allowed"


we have noticed that we can change the email using a GET instead of using a POST, with the method override.

GET /my-account/change-email?email=wiener443%40normal-user.net&_method=POST  so this works and allows us to change the email


Now the default policy here for SameSite is LAX, this means that we can perform a request if the it starts from the same site or if it is performed on top-level navigation, for example when we input the url in the url bar in browsers

3) A way to force a top level navigation can be using document.location, so we can provide this script:

    <script>
        document.location = "https://YOUR-LAB-ID.web-security-academy.net/my-account/change-email?email=pwned@web-security-academy.net&_method=POST";
    </script>

4) send it to victim



for top-level navigation we can use also window.location.href = 'https://www.example.com/newpage';
location.assign('https://www.example.com/newpage');
window.open('https://www.example.com/newpage', '_blank');

